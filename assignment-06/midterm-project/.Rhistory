shiny::runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library("DT")
library("tidyverse")
library("readxl")
#source("jaxmat.R")   #for displaying mathematics
stylesheet <- tags$head(tags$style(HTML('
.main-header .logo {
font-family: "Georgia", Times, "Times New Roman", serif;
font-weight: bold;
font-size: 24px;
}
')
#source("jaxmat.R")   #for displaying mathematics
stylesheet <- tags$head(tags$style(HTML('
.main-header .logo {
font-family: "Georgia", Times, "Times New Roman", serif;
font-weight: bold;
font-size: 24px;
}
')
#source("jaxmat.R")   #for displaying mathematics
stylesheet <- tags$head(tags$style(HTML('
.main-header .logo {
font-family: "Georgia", Times, "Times New Roman", serif;
font-weight: bold;
font-size: 24px;
}
')
#source("jaxmat.R")   #for displaying mathematics
stylesheet <- tags$head(tags$style(HTML('
.main-header .logo {
font-family: "Georgia", Times, "Times New Roman", serif;
font-weight: bold;
font-size: 24px;
}
')
#source("jaxmat.R")   #for displaying mathematics
stylesheet <- tags$head(tags$style(HTML('
.main-header .logo {
font-family: "Georgia", Times, "Times New Roman", serif;
font-weight: bold;
font-size: 24px;
}
')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
runApp('C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project')
covid_data <- read_excel("data/covid_data.xlsx")
country_continent <- filter(name %in% covid_data$countriesAndTerritories)
country_continent
covid_data <- read_excel("data/covid_data.xlsx")
country_continent <- covid_data %>% filter(name %in% covid_data$countriesAndTerritories)
country_continent
covid_data <- as_tibble(read_excel("data/covid_data.xlsx"))
getwd()
setwd("~/")
setwd("C:\Users\tmuss\Desktop\MS in CS\MATH E-151\r-programming\assignment-06\midterm-project")
setwd("C:/Users/tmuss/Desktop/MS in CS/MATH E-151/r-programming/assignment-06/midterm-project")
getwd()
covid_data <- as_tibble(read_excel("data/covid_data.xlsx"))
covid_data
country_continent <- covid_data %>% pull(countriesAndTerritories)
country_continent
country_continent <- distinct(covid_data %>% pull(countriesAndTerritories))
country_continent
country_continent <- unique(covid_data %>% pull(countriesAndTerritories))
country_continent
continents
continents <- unique(covid_data %>% pull(continentExp))
continents
runApp()
runApp()
runApp()
runApp()
runApp()
covid_data
covid_data_per_country_per_month <- covid_data %>% group_by(countriesAndTerritories, month)
covid_data_per_country_per_month %>% summarise(
cases = sum(cases),
deaths = sum(deaths)
)
covid_data_per_country_per_month
covid_data_per_country_per_month <- covid_data %>% group_by(countriesAndTerritories, month)
covid_data_per_country_per_month <- covid_data_per_country_per_month %>% summarise(
cases = sum(cases),
deaths = sum(deaths)
)
covid_data_per_country_per_month
ggplot(data = covid_data_per_country_per_month, mapping = aes(x=month, y=cases, fill=death)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values = c("red", "blue"))
ggplot(data = covid_data_per_country_per_month, mapping = aes(x=month, y=cases, fill=deaths)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values = c("red", "blue"))
ggplot(data = covid_data_per_country_per_month, mapping = aes(x=month, y=cases, fill=deaths)) +
geom_bar(stat="identity", position = "dodge")
ggplot(d, aes(x=countries[0], y=month, fill=cases)) + geom_bar(position=position_dodge())
ggplot(covid_data_per_country_per_month, aes(x=countries[0], y=month, fill=cases)) + geom_bar(position=position_dodge())
ggplot(covid_data_per_country_per_month, aes(x=countries[0], y=month, fill=cases)) + geom_bar(position=position_dodge())
ggplot(covid_data_per_country_per_month, aes(x=countriesAndTerritories[0], y=month, fill=cases)) + geom_bar(position=position_dodge())
ggplot(covid_data_per_country_per_month, aes(x=countriesAndTerritories, y=month, fill=cases)) + geom_bar(position=position_dodge())
ggplot(data = covid_data_per_country_per_month, mapping = aes(x=month, y=cases, fill=deaths)) +
geom_bar(stat="identity", position = "dodge")
covid_data_per_country_per_month$countriesAndTerritories
covid_data_per_country_per_month$countriesAndTerritories[[0]]
covid_data_per_country_per_month$countriesAndTerritories[[1]]
covid_data_per_country_per_month$countriesAndTerritories[1]
which(covid_data_per_country_per_month$countriesAndTerritories == "Afghanistan")
covid_data_per_country_per_month$countriesAndTerritories
covid_data_per_country_per_month
ggplot(Animals, aes(factor(month), cases, fill = deaths)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(covid_data_per_country_per_month, aes(factor(month), cases, fill = deaths)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(covid_data_per_country_per_month, aes(factor(month), cases, fill = deaths)) +
geom_bar(stat="identity", position = "dodge")
ggplot(covid_data_per_country_per_month, aes(factor(month), Count = cases, fill = deaths)) +
geom_bar(stat="identity", position = "dodge")
ggplot(covid_data_per_country_per_month, aes(x = factor(month), y = cases, fill = deaths)) +
geom_bar(stat="identity", position = "dodge")
ggplot(covid_data_per_country_per_month, aes(x = factor(month), y = cases),aes(x = factor(month), y = deaths)) +
geom_bar(stat="identity", position = "dodge")
ggplot(covid_data_per_country_per_month) + aes(x = factor(month), y = cases)
+ aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
ggplot(covid_data_per_country_per_month) + aes(x = factor(month), y = cases) +
#aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
ggplot(covid_data_per_country_per_month) + aes(x = factor(month), y = cases~deaths) +
#aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
ggplot(covid_data_per_country_per_month) + aes(x = factor(month), y = cases, z = deaths) +
#aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
server <- function(session, input, output) {
covid_data <- as_tibble(read_excel("data/covid_data.xlsx"))
countries <- unique(covid_data %>% pull(countriesAndTerritories))
continents <- unique(covid_data %>% pull(continentExp))
updateSelectInput(session,
"selected_continent",
choices = continents)
observeEvent(input$selected_continent,
{
countries_in_continent <- covid_data %>%
filter(continentExp == input$selected_continent) %>%
pull(countriesAndTerritories)
updateSelectInput(session,
"selected_country",
choices = countries_in_continent)
})
covid_data_per_country_per_month <- covid_data %>% group_by(countriesAndTerritories, month)
covid_data_per_country_per_month <- covid_data_per_country_per_month %>% summarise(
cases = sum(cases),
deaths = sum(deaths)
)
which(covid_data_per_country_per_month$countriesAndTerritories == "Afghanistan")
ggplot(data = covid_data_per_country_per_month, mapping = aes(x=month, y=cases, fill=deaths)) +
geom_bar(stat="identity", position = "dodge")
ggplot(covid_data_per_country_per_month) + aes(x = factor(month), y = cases, z = deaths) +
#aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
}
ggplot(covid_data_per_country_per_month) + aes(x = factor(month), y = cases, z = deaths) +
#aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
server <- function(session, input, output) {
covid_data <- as_tibble(read_excel("data/covid_data.xlsx"))
countries <- unique(covid_data %>% pull(countriesAndTerritories))
continents <- unique(covid_data %>% pull(continentExp))
updateSelectInput(session,
"selected_continent",
choices = continents)
observeEvent(input$selected_continent,
{
countries_in_continent <- covid_data %>%
filter(continentExp == input$selected_continent) %>%
pull(countriesAndTerritories)
updateSelectInput(session,
"selected_country",
choices = countries_in_continent)
})
covid_data_per_country_per_month <- covid_data %>% group_by(countriesAndTerritories, month)
covid_data_per_country_per_month <- covid_data_per_country_per_month %>% summarise(
cases = sum(cases),
deaths = sum(deaths)
)
which(covid_data_per_country_per_month$countriesAndTerritories == "Afghanistan")
ggplot(data = covid_data_per_country_per_month, mapping = aes(x=month, y=cases, fill=deaths)) +
geom_bar(stat="identity", position = "dodge")
ggplot(covid_data_per_country_per_month) + aes(x = factor(month), y = cases, z = deaths) +
#aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
}
ggplot(covid_data_per_country_per_month) +
geom_bar(aes(x = factor(month), y = cases)) +
#aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
ggplot(covid_data_per_country_per_month) +
geom_bar(aes(x = factor(month))) +
#aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
ggplot(covid_data_per_country_per_month) +
geom_bar(aes(x = factor(month), y = cases)) +
#aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
ggplot() +
geom_bar(data = covid_data_per_country_per_month, aes(x = factor(month), y = cases)) +
#aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
ggplot() +
geom_bar(data = covid_data_per_country_per_month, aes(factor(month),cases)) +
#aes(x = factor(month), y = deaths) +
geom_bar(stat="identity", position = "dodge")
ggplot() +
geom_bar(data = covid_data_per_country_per_month, aes(factor(month),cases))
covid_data_per_country_per_month
ggplot(data = covid_data_per_country_per_month, mapping = aes(x=month, y=cases, fill=deaths)) +
geom_col(stat="identity", position = "dodge")
library(reshape2)
install.packages("reshape2")
library(reshape2)
df2 <- melt(covid_data_per_country_per_month, id.vars='countriesAndTerritories')
df2
covid_data_per_country_per_month
df2
df2 <- melt(covid_data_per_country_per_month, id.vars='cases')
df2
df2 <- melt(covid_data_per_country_per_month, id.vars='countriesAndTerritories')
df2
df2 <- melt(covid_data_per_country_per_month, id.vars='cases')
df2
df2 <- melt(covid_data_per_country_per_month, id.vars='cases, deaths')
df2 <- melt(covid_data_per_country_per_month, id.vars=['cases', 'deaths'])
df2
df2 <- melt(covid_data_per_country_per_month, id.vars='cases', 'deaths')
df2
df2 <- melt(covid_data_per_country_per_month, id.vars='month', 'cases', 'deaths')
df2
ggplot(data = covid_data_per_country_per_month, mapping = aes(x=month, y=cases, fill=variable)) +
geom_col(stat="identity", position = "dodge")
ggplot(data = covid_data_per_country_per_month, mapping = aes(x=month, y=cases, fill=variable)) +
geom_bar(stat="identity", position = "dodge")
ggplot(data = covid_data_per_country_per_month, mapping = aes(x=month, y=cases)) +
geom_bar(stat="identity", position = "dodge")
runApp()
install.packages("reshape2")
